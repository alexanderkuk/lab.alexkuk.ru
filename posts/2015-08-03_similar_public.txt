Поиск похожих групп и пабликов Вконтакте

На днях удалось провернуть интересную штуку. Для всех групп Вконтакте с числом подписчиков от 5000 до 10 000 (~100 000 групп) был построен полный граф, в котором веса рёбер равнялись пересечению аудиторий групп.

<img src="https://habrastorage.org/files/07b/abc/b6e/07babcb6ec244be08d9cf5e7df81c409.png"/>
<cut>
Во-первых, такой граф красиво выглядит:

<img src="https://habrastorage.org/files/e3c/f97/074/e3cf970746a44c39bd29dfcefa825cb3.png"/>

Во-вторых, с его помощью можно быстро подбирать группы заданой тематики. Например,  нужно найти группы про вязание. По ключевому слову "вязание" находим, одну подходящую группу, <a href="https://vk.com/club71197950">Knitting -Вязание online-</a>, например. Выводим группы, с которыми она связана:

Knitting -Вязание online-:
6.04% <a href="https://vk.com/club75577569">Корпорация "ПРЯЖА"</a>
5.90% <a href="https://vk.com/club65805953">Мамочкин канал - для творческих мам (КРЮЧКОМ!)</a>
3.40% <a href="https://vk.com/club87484544">Вязание.  В этом мире всё связано...))</a>
3.01% <a href="https://vk.com/club53371463">ПРЯЖА ДЁШЕВО.ФЛИС.РЕЗИНКИ ДЛЯ ПЛЕТЕНИЯ БРАСЛЕТОВ</a>
2.35% <a href="https://vk.com/club59200218">Пряжа Spagetti Спагетти</a>
1.87% <a href="https://vk.com/club58678379">Магазинчик пряжи Eesti lõng (Kauni, Кауни)</a>
1.73% <a href="https://vk.com/club44159519">*Искусство вязания крючком*</a>
1.70% <a href="https://vk.com/club57231027">Пряжа Кауни (Kauni)  - легенда Эстонии. Вязание.</a>
1.66% <a href="https://vk.com/club7663754">"Кружевные мотивы" - вязание и рукоделие</a>
1.54% <a href="https://vk.com/club33108116">Пряжа турецкая в наличии и на заказ(Украина)</a>

И повторяем пока не надоест или пока не перестанут появляться новые названия.

Вязание.  В этом мире всё связано...:
8.88% <a href="https://vk.com/club75577569">Корпорация "ПРЯЖА"</a>
3.06% <a href="https://vk.com/club65805953">Мамочкин канал - для творческих мам (КРЮЧКОМ!)</a>
2.58% <a href="https://vk.com/club53371463">ПРЯЖА ДЁШЕВО.ФЛИС.РЕЗИНКИ ДЛЯ ПЛЕТЕНИЯ БРАСЛЕТОВ</a>
2.30% <a href="https://vk.com/club71197950">Knitting -Вязание online-</a>
2.14% <a href="https://vk.com/club40561560">Интернет-Магазин Пряжи "АЖУР"</a>
1.94% <a href="https://vk.com/club57231027">Пряжа Кауни (Kauni)  - легенда Эстонии. Вязание.</a>
1.85% <a href="https://vk.com/club86306132">Магазин пряжи - ღ ВАША ПРЯЖА ღ</a>
1.76% <a href="https://vk.com/club5084903">Пряжа</a>
1.72% <a href="https://vk.com/club73587182">Ажурный мир: связано с любовью!</a>
1.55% <a href="https://vk.com/club58678379">Магазинчик пряжи Eesti lõng (Kauni, Кауни)</a>

Корпорация "ПРЯЖА":
7.54% <a href="https://vk.com/club87484544">Вязание.  В этом мире всё связано...))</a>
4.01% <a href="https://vk.com/club65805953">Мамочкин канал - для творческих мам (КРЮЧКОМ!)</a>
3.47% <a href="https://vk.com/club71197950">Knitting -Вязание online-</a>
3.20% <a href="https://vk.com/club53371463">ПРЯЖА ДЁШЕВО.ФЛИС.РЕЗИНКИ ДЛЯ ПЛЕТЕНИЯ БРАСЛЕТОВ</a>
2.72% <a href="https://vk.com/club40561560">Интернет-Магазин Пряжи "АЖУР"</a>
2.67% <a href="https://vk.com/club5084903">Пряжа</a>
2.11% <a href="https://vk.com/club37664558">"Мадам Вязалкина" Пряжа (товары для рукоделия)</a>
2.00% <a href="https://vk.com/club57231027">Пряжа Кауни (Kauni)  - легенда Эстонии. Вязание.</a>
1.85% <a href="https://vk.com/club58678379">Магазинчик пряжи Eesti lõng (Kauni, Кауни)</a>
1.82% <a href="https://vk.com/club59200218">Пряжа Spagetti Спагетти</a>

"Мадам Вязалкина" Пряжа (товары для рукоделия):
2.49% <a href="https://vk.com/club5084903">Пряжа</a>
2.37% <a href="https://vk.com/club75577569">Корпорация "ПРЯЖА"</a>
1.42% <a href="https://vk.com/club58678379">Магазинчик пряжи Eesti lõng (Kauni, Кауни)</a>
1.39% <a href="https://vk.com/club57231027">Пряжа Кауни (Kauni)  - легенда Эстонии. Вязание.</a>
1.32% <a href="https://vk.com/club53371463">ПРЯЖА ДЁШЕВО.ФЛИС.РЕЗИНКИ ДЛЯ ПЛЕТЕНИЯ БРАСЛЕТОВ</a>
1.26% <a href="https://vk.com/club38116251">Магазин пряжи и товаров для рукоделия КУДЕЛЬ</a>
1.24% <a href="https://vk.com/club12443394">Вязаные головные уборы и не только.</a>
1.21% <a href="https://vk.com/club60959851">HOBBY & HOME | РУКОДЕЛИЕ</a>
1.18% <a href="https://vk.com/club40561560">Интернет-Магазин Пряжи "АЖУР"</a>
1.15% <a href="https://vk.com/club59200218">Пряжа Spagetti Спагетти</a>

Аналогичного результата можно добиться грамотно подобрав ключевые слова для поиска: "вязание", "пряжа", "рукоделие", "крючком". Но их не всегда просто придумать.

Чтобы построить такой граф было использовано несколько неочевидных технических решений, о которых я хотел бы рассказать.

Чтобы получить полный список групп заданного размера, был прокачан прекрасный сайт http://allsocial.ru/ . Интересно как они собирают эти данные? Просто идут по всем индексам: https://vk.com/club1, https://vk.com/club2, ...? Брались только средние группы с числом подписчиков от 5000 до 10 000 человек по двум причинам: огромные паблики типа МДК чёкнешься прокачивать, но, что важнее, членство в них не несёт особенного сигнала, такие группы связаны со всем на свете.

Чтобы получить список подписчиков групп в АПИ Вконтакта, есть специальный метод. Но он позволяет получать по 1000 пользователей за раз и только 3 раза за секунду. А прокачать надо было порядка 1 000 000 000 пользователей, что дофига. Получается, что надо будет ждать 3-4 суток, если ВК будет отвечать на каждый запрос мгновенно. Это, в целом, терпимо, но смущало следующее замечание в документации:
<blockquote>Помимо ограничений на частоту обращений, существуют и количественные ограничения на вызов однотипных методов. По понятным причинам, мы не предоставляем информацию о точных лимитах. </blockquote>
В нашем случае, это замечание напрягает, потому что нужно будет сделать 1 000 000 запросов. На помощь здесь приходит крутейший метод <a href="https://vk.com/dev/execute">execute</a>. Большой респект за него ребятам из ВК. Интересно у кого-нибудь ещё есть такая штука? Суть в том, что через execute можно посылать в Контакт программы на специальном языке VKScript, запихивать туда несколько запросов к АПИ и, возможно, какую-то логику. В моём случае программа выглядела примерно так:

<source lang="javascript">
return [
    API.groups.getMembers(id=1, offset=0, count=1000),
    API.groups.getMembers(id=1, offset=1000, count=1000),
    API.groups.getMembers(id=1, offset=2000, count=1000),
    API.groups.getMembers(id=1, offset=3000, count=1000),
    API.groups.getMembers(id=1, offset=4000, count=1000),
    API.groups.getMembers(id=1, offset=5000, count=1000),
    ...
];
</source>
Внутри программы может быть не больше 25 обращений к АПИ. То есть число запросов сокращается до 40 000, теоретически бан может миновать. Каждый такой запрос выполнялся уже совсем не мгновенно, а примерно 5-6 секунд, поэтому подождать всё равно пришлось. Да, можно было бы запустить скачивание в несколько потоков, но чёт было стрёмно. Через два с половиной дня всё докачалось и заняло примерно 10Гб у меня на диске.

Теперь встаёт вопрос как запихнуть эти 10Гб в оперативную память и как посчитать попарное пересечение аудиторий для 100 000 групп. Спасает тот факт, что каждый пользователь состоит обычно в небольшом количестве групп (99% пользователей состоят менее чем в 15 группах). Можно выписать какие вклады вносит в пересечения каждый пользователь и потом эти вклады сложить. Пускай, например, есть два пользователя: А и Б, и три группы 1, 2 и 3. А состоит во всех трёх, Б - только в 1 и 3. А вносит вклады в три пересечения: (1, 2), (1, 3) и (2, 3), Б - в одно: (1, 3). Складываем, получаем, что 1 и 3 пересекаются по двум пользователя, остальные группы по одному. Если технично проигнорировать пользователей, которые состоят в 15 группах и больше, то придётся выписать примерно 500 000 000 пересечений, что гораздо лучше, чем при решении в лоб, где нужно будет посчитать 100 000 * 100 000 пересений.

Прекрасно, осталась только проблема с оперативной памятью. К счастью, описанный алгоритм хорошо ложится на парадигму мап-редьюс, поэтому был запилен <a href="https://github.com/alexanderkuk/analyze-vk-groups/blob/master/main.py#L294-L350">нано-хадуп на 50 строчек</a> и расчёт выглядел так: выписываем группы и пользователей, которые в них состоят в две колонки:

<source lang="bash">
group	user
3953835	10
2065169	100001643
2112714	100001643
...
</source>
Получается файл на ~9Гб, сортируем его юниксовым сортом по второй колонке, смотрим, где состоит Павел Дуров:
<source lang="bash">
group	user
2226515	1
37110020	1
38354466	1
43453499	1
60140141	1
60615047	1
64980878	1
1019652	10
...
</source>
Читаем файл, группируем поток по второй колонке, в памяти держим только список групп пользователя, если групп меньше 15, выписываем все паросочетания в ещё один файл:

<source lang="bash">
source	target
10000	10027193
9980615	9997141
9974	9976553
...
</source>
Так как порог подобран грамотно, файл получается не слишком большой - ~9Гб. Сортируем его по двум колонкам:
<source lang="bash">
source	target
10000	100000
10000	100000
10000	10009982
10000	100100
10000	100100
10000	10019194
10000	10019194
10000	1002
10000	1002
10000	1002
...
</source>
Дальше файл читается, группируется по двум колонкам и сразу считается пересечение. Для групп 10000 и 100000, например, перечение 2 пользователя. Это можно сказать сразу, ничего хранить в памяти не надо.

Дальше рёбра фильтруются по какому-нибудь разумному порогу, чтобы их осталось не очень много. Результат можно посмотреть в Гефи. Есть два секрета: чтобы все работало не мучительно долго нужно отключить рисование рёбер, для укладки нужно скачать OpenOrd, он уложил мой граф на ~100 000 вершин за ~5 минут.

Подобный подход теоретически можно использовать в любой задаче, где есть две связанные сущности: сайты и пользователи, запрос и результаты выдачи, например.
